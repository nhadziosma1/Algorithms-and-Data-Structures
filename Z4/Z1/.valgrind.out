==26442== Memcheck, a memory error detector
==26442== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==26442== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==26442== Command: /rhome/n/nhadziosma1/workspace/ASP/Z4/Z1/.runme
==26442== Parent PID: 26423
==26442== 
==26442== Conditional jump or move depends on uninitialised value(s)
==26442==    at 0x10A16C: AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Ubaci(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (main.cpp:404)
==26442==    by 0x10A2CB: AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::IskopirajSVE(AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Cvor*) (main.cpp:107)
==26442==    by 0x109D51: AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::AVLStabloMapa(AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (main.cpp:117)
==26442==    by 0x109553: main (main.cpp:496)
==26442== 
==26442== Use of uninitialised value of size 8
==26442==    at 0x5164BDA: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==26442==    by 0x10A31E: bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6126)
==26442==    by 0x10A18C: AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Ubaci(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (main.cpp:408)
==26442==    by 0x10A2CB: AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::IskopirajSVE(AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Cvor*) (main.cpp:107)
==26442==    by 0x109D51: AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::AVLStabloMapa(AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (main.cpp:117)
==26442==    by 0x109553: main (main.cpp:496)
==26442== 
==26442== Invalid read of size 8
==26442==    at 0x5164BDA: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==26442==    by 0x10A31E: bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6126)
==26442==    by 0x10A18C: AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Ubaci(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (main.cpp:408)
==26442==    by 0x10A2CB: AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::IskopirajSVE(AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Cvor*) (main.cpp:107)
==26442==    by 0x109D51: AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::AVLStabloMapa(AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (main.cpp:117)
==26442==    by 0x109553: main (main.cpp:496)
==26442==  Address 0x21 is not stack'd, malloc'd or (recently) free'd
==26442== 
==26442== 
==26442== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==26442==  Access not within mapped region at address 0x21
==26442==    at 0x5164BDA: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==26442==    by 0x10A31E: bool std::operator><char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (basic_string.h:6126)
==26442==    by 0x10A18C: AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Ubaci(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (main.cpp:408)
==26442==    by 0x10A2CB: AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::IskopirajSVE(AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Cvor*) (main.cpp:107)
==26442==    by 0x109D51: AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::AVLStabloMapa(AVLStabloMapa<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (main.cpp:117)
==26442==    by 0x109553: main (main.cpp:496)
==26442==  If you believe this happened as a result of a stack
==26442==  overflow in your program's main thread (unlikely but
==26442==  possible), you can try to increase the size of the
==26442==  main thread stack using the --main-stacksize= flag.
==26442==  The main thread stack size used in this run was 8388608.
==26442== 
==26442== HEAP SUMMARY:
==26442==     in use at exit: 192 bytes in 2 blocks
==26442==   total heap usage: 3 allocs, 1 frees, 72,896 bytes allocated
==26442== 
==26442== LEAK SUMMARY:
==26442==    definitely lost: 0 bytes in 0 blocks
==26442==    indirectly lost: 0 bytes in 0 blocks
==26442==      possibly lost: 0 bytes in 0 blocks
==26442==    still reachable: 192 bytes in 2 blocks
==26442==         suppressed: 0 bytes in 0 blocks
==26442== Reachable blocks (those to which a pointer was found) are not shown.
==26442== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26442== 
==26442== For counts of detected and suppressed errors, rerun with: -v
==26442== Use --track-origins=yes to see where uninitialised values come from
==26442== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
